[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim']

[[plugins]]
repo = 'preservim/vim-markdown'
depends = ['tabular']
on_ft = ['markdown']
hook_source = '''
let g:vim_markdown_no_default_key_mappings = 1
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_math = 1
let g:vim_markdown_strikethrough = 1
'''
[[plugins]]
repo = 'godlygeek/tabular'
on_source = ['vim-markdown']
[[plugins]]
repo = 'tmux-plugins/vim-tmux'
on_ft = ['tmux']


[[plugins]]
repo = 'qnighy/satysfi.vim'
on_ft = ['satysfi']

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_source= ['context_filetype.vim']


[[plugins]]
repo = 'thinca/vim-partedit'
on_cmd = 'Partedit'
on_func = 'partedit#start'
hook_add = '''
    let g:partedit#prefix_pattern = '\s*'
    let g:partedit#auto_prefix = 0
'''
[plugins.ftplugin]
toml_markdown = '''
    nnoremap <buffer> <C-p> <Cmd>call <SID>operator_partedit()<CR>
    function! s:operator_partedit() abort
      let context = context_filetype#get()
      if context.range == [[0, 0], [0, 0]]
        echohl WarningMsg
        echomsg 'Context is not found'
        echohl NONE
        return
      endif
      call partedit#start(context.range[0][0], context.range[1][0],
            \ {'filetype': context.filetype})
      nnoremap <buffer><nowait> Q <Cmd>w<CR><Cmd>ParteditEnd<CR>
    endfunction
'''
