#completion framework
[[plugins]]
repo = 'Shougo/pum.vim'
on_source = 'ddc.vim'
depends = 'denops.vim'
hook_post_source = '''
inoremap <silent><expr> <TAB>
      \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
      \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
      \ '<TAB>' : ddc#manual_complete()
inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-n>   <Cmd>call pum#map#select_relative(+1)<CR>
inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
inoremap <C-p>   <Cmd>call pum#map#select_relative(-1)<CR>
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
depends = 'denops.vim'
hook_post_source = '''
call popup_preview#enable()
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
depends = ['denops.vim','denops-popup_preview.vim']
hook_post_source = '''
let g:signature_help_config = {
      \ 'contentsStyle': "full",
      \ 'viewStyle': "floating"
      \ }
call signature_help#enable()
'''
# ddc ui
[[plugins]]
repo = 'Shougo/ddc-ui-pum'
on_source = 'ddc.vim'
depends = 'denops.vim'

#ddc source
[[plugins]]
repo = 'Shougo/ddc-source-around'
depends = 'denops.vim'
on_source = 'ddc.vim'

[[plugins]]
repo = 'LumaKernel/ddc-source-file'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-lsp'
on_source = 'ddc.vim'

#ddc matchers , sorters, ...
[[plugins]]
repo = 'tani/ddc-fuzzy'
on_source = 'ddc.vim'
depdns = 'denops.vim'



#ddc
[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim']
on_event = ['InsertEnter','CmdlineEnter']
hook_post_source = '''
call ddc#custom#patch_global('ui','pum')
call ddc#custom#patch_global('sources', ['lsp','file','around','skkeleton'])
call ddc#custom#patch_global('sourceOptions', {
  \   '_': {
  \     'matchers': ['matcher_fuzzy'],
  \     'sorters': ['sorter_fuzzy'],
  \     'converters': ['converter_fuzzy']
  \   },
  \   'skkeleton': {
  \     'mark': 'skkeleton',
  \     'matchers': [],
  \     'sorters': [],
  \     'converters': [],
  \     'isVolatile': v:true,
  \     'minAutoCompleteLength': 1,
  \   },
  \   'around': { 'mark': 'A' },
  \   'file': {
  \     'mark': 'F',
  \     'isVolatile': v:true,
  \     'forceCompletionPattern': '\S/\S*',
  \   },
  \   'lsp': {
  \     'mark': 'lsp',
  \     'forceCompletionPattern': '\.\w*|:\w*|->\w*'
  \   },
  \ })
call ddc#custom#patch_global('sourceParams', {
      \   'around': { 'maxSize': 500 },
      \   'lsp': #{
      \     snippetEngine: denops#callback#register({
      \           body -> vsnip#anonymous(body)
      \     }),
      \     enableResolveItem: v:true,
      \     enableAdditionalTextEdit: v:true,
      \   }
      \})
call ddc#custom#patch_filetype(
    \ ['ps1', 'dosbatch', 'autohotkey', 'registry'], {
    \ 'sourceOptions': {
    \   'file': {
    \     'forceCompletionPattern': '\S\\\S*',
    \   },
    \ },
    \ 'sourceParams': {
    \   'file': {
    \     'mode': 'win32',
    \   },
    \ }})
call ddc#enable()
'''
