
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = ['InsertEnter']
hook_source = '''
" Deoplete gets started automatically when Neovim/Vim starts
let g:deoplete#enable_at_startup = 1
" Delay the completion after input in milliseconds
let g:deoplete#auto_complete_delay = 0
" Doc: https://neovim.io/doc/user/options.html#'completeopt'
set completeopt=menuone
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['context_filetype.vim']
on_ft = ['snippet']
on_source = ['deoplete.nvim']
hook_post_update = '''
let s:snippet_dir = g:xdg_config_home . '/vim/snippet'
if !isdirectory(s:snippet_dir)
    execute '!mkdir -p' s:snippet_dir
endif
'''
hook_source = '''
im   <C-k> <Plug>(neosnippet_expand_or_jump)
smap <C-k> <Plug>(neosnippet_expand_or_jump)
xm   <C-k> <Plug>(neosnippet_expand_target)
" SuperTab like snippets behavior.
im <expr><TAB> pumvisible()                 ? "\<C-n>"
    \ : neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)"
    \ : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable()
    \ ? "\<Plug>(neosnippet_expand_or_jump)"
    \ : "\<TAB>"
" Shift Tab
im <expr><S-TAB> pumvisible()               ? "\<C-p>"
    \ : neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)"
    \ : "\<S-TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable()
    \ ? "\<Plug>(neosnippet_expand_or_jump)"
    \ : "\<S-TAB>"
" snippet dir
let g:neosnippet#snippets_directory = g:xdg_config_home . '/vim/snippet'
'''
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['neosnippet.vim']
on_source = ['neosnippet.vim']


[[plugins]]
repo = 'wellle/tmux-complete.vim'
depends = ['deoplete.nvim']
on_source = ['deoplete.nvim']
hook_source = '''
" Doc: https://github.com/wellle/tmux-complete.vim#settings
let g:tmuxcomplete#trigger = ''
'''

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
depends = ['deoplete.nvim']
on_source = ['deoplete.nvim']
