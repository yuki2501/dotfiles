
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = ['plenary.nvim']
on_cmd=['Telescope']
hook_add = '''
nnoremap <leader>ff <cmd>Telescope find_files<cr>
'''
[[plugins]]
repo = 'simeji/winresizer'
on_cmd = 'WinResizerStartResize'
hook_add = '''
nnoremap <C-e> <cmd>WinResizerStartResize<cr>
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''
[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'kyazdani42/nvim-tree.lua'
on_cmd = ['NvimTreeToggle']
hook_add = '''
nnoremap <C-f> :NvimTreeToggle<CR>
nnoremap <leader>r :NvimTreeRefresh<CR>
nnoremap <leader>n :NvimTreeFindFile<CR>
'''
hook_source = '''
lua << EOF
require'nvim-tree'.setup()
EOF
'''

[[plugins]]
repo = 'akinsho/toggleterm.nvim'
hook_add = '''
nnoremap <silent><c-\> <Cmd>exe v:count1 . "ToggleTerm"<CR>
inoremap <silent><c-\> <Esc><Cmd>exe v:count1 . "ToggleTerm"<CR>
'''
hook_post_source = '''
lua << EOF
require("toggleterm").setup{
  -- size can be a number or function which is passed the current terminal
  size =  20,
  open_mapping = [[<c-\>]],
  hide_numbers = true, -- hide the number column in toggleterm buffers
  shade_filetypes = {},
  shade_terminals = true,
  shading_factor = '<number>', -- the degree by which to darken to terminal colour, default: 1 for dark backgrounds, 3 for light
  start_in_insert = true,
  insert_mappings = true, -- whether or not the open mapping applies in insert mode
  terminal_mappings = true, -- whether or not the open mapping applies in the opened terminals
  persist_size = true,
  direction = 'horizontal' ,
  close_on_exit = true, -- close the terminal window when the process exits
  shell = vim.o.shell, -- change the default shell
}
EOF
'''
[[plugins]]
repo = 'jiangmiao/auto-pairs'
on_event = ['InsertEnter']
hook_source = '''
aug AutoPairs
    au!
    au Filetype html let b:AutoPairs = AutoPairsDefine({ '<': '>' })
    au FileType rust let b:AutoPairs = AutoPairsDefine({ '\w\zs<': '>' })
    au FileType satysfi let b:AutoPairs = AutoPairsDefine({ '<': '>' })
aug END
'''

[[plugins]]
repo = 'vim-skk/skkeleton'
on_event = ['InsertEnter']
hook_source = '''
call skkeleton#config({'globalJisyo': '~/.skk/SKK-JISYO.L'})
call skkeleton#config({'wikiJisyo': '~/.skk/SKK-JISYO.jawiki'})
'''
hook_add = '''
imap <C-j> <Plug>(skkeleton-enable)
cmap <C-j> <Plug>(skkeleton-enable)
'''
[[plugins]]
repo = 'numToStr/Comment.nvim'
on_event = ['BufRead']
hook_source = '''
lua << EOF
require('Comment').setup()
EOF
'''
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
merged = 0
on_event = 'BufRead'
hook_source = '''
lua << EOF
require('nvim-treesitter.configs').setup{
  highlight = {
    enable = true,
    disable = {"vim","toml","lua"},
  },
}
EOF
'''
hook_post_update = 'TSUpdate'
[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = ['BufRead']
hook_post_update = '''
lua << EOF
vim.opt.list = true
vim.opt.listchars:append("space:⋅")
vim.opt.listchars:append("eol:↴")
require('indent_blackline').setup{
  space_char_blankline = " ",
  show_current_context = true,
  show_current_context_start = true,
}
EOF
'''
