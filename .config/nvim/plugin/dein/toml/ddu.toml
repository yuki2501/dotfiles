[vertical[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'uga-rosa/ddu-filter-converter_devicon'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'shun/ddu-source-rg'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
[[plugins]]
repo = 'Milly/ddu-filter-kensaku'

[[plugins]]
repo = 'Shougo/ddu-source-line'

[[plugins]]
repo = 'Shougo/ddu.vim'
hook_add = '''
nnoremap <silent><leader>ff <cmd>call ddu#start({"name": "node-files", "sourceOptions": {"file_rec": {"path": getcwd()}}})<CR>
nnoremap <silent><leader>l <cmd> call ddu#start({"name": "lines"})<cr>
inoremap <silent><C-l> <cmd> call ddu#start({"name": "lines"})<cr>
command! DduWholeFiles call ddu#start({"name": "whole-files", "sourceOptions": {"file_rec": {"path": getcwd()}}})
nnoremap <silent><leader>fw <Cmd>call ddu#start({
\   'sources':[
\     {'name': 'rg','options': {'matchers':[], "volatile": v:true,}}
\   ],
\ })<CR>
'''

hook_post_source = '''
" 全体に共通する設定を行う
call ddu#custom#patch_global({
    \     "ui": "ff",
    \     "uiParams": {
    \       "ff" : {
    \          "autoAction" : {"name": "preview", "delay":0},
    \          "filterFloatingPosition" : "bottom",
    \          "filterSplitDirection" : "floating",
    \          "floatingBorder" : "rounded",
    \          "startAutoAction" : v:true,
    \          "previewFloating" : v:true,
    \          "previewFloatingBorder" : "rounded",
    \          "previewFloatingTitle" : "Preview",
    \          "previewSplit" : "horizontal",
    \          "prompt" : "> ",
    \          "split" : "floating",
    \          "startFilter" : v:true,
    \       }
    \     },
    \     "sourceOptions": {
    \         "_": {
    \             "matchers": ["matcher_kensaku"]
    \         }
    \     },
    \     "filterParams": {
    \         "matcher_kensaku": {
    \             "highlightMatched": "Search",
    \         },
    \     },
    \     "kindOptions": {
    \         "file": {
    \             "defaultAction": "open",
    \         },
    \     },
    \ })

" ddunodefilesで使用する設定を用意する
call ddu#custom#patch_local("node-files", {
    \     "sources":[{
    \        "name":"file_rec",
    \        "options": {"converters":["converter_devicon"],},
    \     }],
    \     "sourceParams": {
    \         "file_rec": {
    \             "ignoredDirectories": [".git", "node_modules", "_build"],
    \         }
    \     }
    \ })

call ddu#custom#patch_local("lines", {
    \     "sources":[{
    \        "name":"line",
    \     }],
    \ })

" dduwholefilesで使用する設定を用意する
call ddu#custom#patch_local("whole-files", {
    \     "sources": ["file_rec"],
    \     "sourceParams": {
    \         "file_rec": {
    \             "ignoredDirectories": [],
    \         }
    \     },
    \     "sourceOptions": {
    \         "file_rec": {
    \             "maxItems": 50000
    \         }
    \     }
    \ })
call ddu#custom#patch_local("grep", {
\   'sourceParams' : {
\     'rg' : {
\       'args': ['--column',  '--color', '--no-hidden'],
\     },
\   },
\   'uiParams': {
\     'ff': {
\       'startFilter': v:false,
\     }
\   },
\ })


 function s:ddu_ff_filter_settings() abort
    nnoremap <buffer>e<cmd>call ddu#ui#do_action('itemAction', {'name': 'open'})<cr>
    nnoremap <buffer> <cr> <esc><cmd>close<cr>
    inoremap <buffer> <cr> <esc><cmd>close<cr>
    inoremap <buffer> <C-n> call ddu#ui#do_action("cursorNext")<cr>
    inoremap <buffer> <C-p> call ddu#ui#do_action("cursorPrevious")<cr>
    nnoremap <buffer> q <cmd>call ddu#ui#do_action("quit")<cr>
 endfunction
 function s:ddu_ff_settings() abort
    nnoremap <buffer> q <cmd>call ddu#ui#do_action("quit")<cr>
    nnoremap <buffer> <cr> <cmd>call ddu#ui#do_action('itemAction',{'name': 'open'})<cr>
    nnoremap <buffer> i <cmd>call ddu#ui#do_action("openFilterWindow")<cr>
    nnoremap <buffer> p <cmd> call ddu#ui#do_action("togglePreview")<cr>
 endfunction
autocmd filetype ddu-ff call s:ddu_ff_settings()
autocmd filetype ddu-ff-filter call s:ddu_ff_filter_settings()
'''



